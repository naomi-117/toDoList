{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"done\": a0\n  };\n};\nfunction ToDoListComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function ToDoListComponent_li_9_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.done = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", item_r2.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, item_r2.done));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.description);\n  }\n}\nexport class ToDoListComponent {\n  constructor() {\n    this.allItems = [];\n    this.newTask = '';\n  }\n  addItem(form) {\n    console.warn(form.value.description);\n    if (this.newTask.trim() !== '') {\n      this.allItems.push({\n        description: this.newTask,\n        done: false\n      });\n      this.newTask = '';\n    }\n  }\n  static #_ = this.ɵfac = function ToDoListComponent_Factory(t) {\n    return new (t || ToDoListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToDoListComponent,\n    selectors: [[\"app-to-do-list\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"name\", \"description\", \"placeholder\", \"New Task\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngClass\"]],\n    template: function ToDoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"TO DO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ToDoListComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.addItem(_r0));\n        });\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ToDoListComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.newTask = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵtext(7, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"ul\");\n        i0.ɵɵtemplate(9, ToDoListComponent_li_9_Template, 4, 5, \"li\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allItems);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\".done[_ngcontent-%COMP%] {\\n    -webkit-text-decoration: gray;\\n            text-decoration: gray;\\n    text-transform: gray;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdG8tZG8tbGlzdC90by1kby1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBcUI7WUFBckIscUJBQXFCO0lBQ3JCLG9CQUFvQjtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIi5kb25lIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogZ3JheTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBncmF5O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ToDoListComponent_li_9_Template_input_ngModelChange_1_listener","$event","restoredCtx","ɵɵrestoreView","_r4","item_r2","$implicit","ɵɵresetView","done","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵtextInterpolate","description","ToDoListComponent","constructor","allItems","newTask","addItem","form","console","warn","value","trim","push","_","_2","selectors","decls","vars","consts","template","ToDoListComponent_Template","rf","ctx","ToDoListComponent_Template_form_ngSubmit_3_listener","_r5","_r0","ɵɵreference","ToDoListComponent_Template_input_ngModelChange_5_listener","ɵɵtemplate","ToDoListComponent_li_9_Template"],"sources":["C:\\Users\\UN\\Documents\\Repos\\toDoListe\\to-do-list\\src\\app\\to-do-list\\to-do-list.component.ts","C:\\Users\\UN\\Documents\\Repos\\toDoListe\\to-do-list\\src\\app\\to-do-list\\to-do-list.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\ninterface TodoItem {\n  description: string;\n  done: boolean;\n}\n\n@Component({\n  selector: 'app-to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent {\n  allItems: TodoItem[] = [];\n  newTask: string = '';\n\n  addItem(form: any) {\n    console.warn(form.value.description);\n    if (this.newTask.trim() !== '') {\n      this.allItems.push({ description: this.newTask, done: false });\n      this.newTask = '';\n    }\n  }\n}","<div>\n    <h2>TO DO</h2>\n    <form #form=\"ngForm\" (ngSubmit)=\"addItem(form)\">\n        <input name=\"description\" placeholder=\"New Task\" required [(ngModel)]=\"newTask\">\n        <button type=\"submit\">Add</button>\n    </form>\n    <ul>\n        <li *ngFor=\"let item of allItems\">\n            <input type=\"checkbox\" [(ngModel)]=\"item.done\">\n            <span [ngClass]=\"{'done': item.done}\">{{ item.description }}</span>\n        </li>\n    </ul>\n</div>"],"mappings":";;;;;;;;;;;ICOQA,EAAA,CAAAC,cAAA,SAAkC;IACPD,EAAA,CAAAE,UAAA,2BAAAC,+DAAAC,MAAA;MAAA,MAAAC,WAAA,GAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,OAAaT,EAAA,CAAAU,WAAA,CAAAF,OAAA,CAAAG,IAAA,GAAAP,MAAA,CAC3C;IAAA,EADqD;IAA9CJ,EAAA,CAAAY,YAAA,EAA+C;IAC/CZ,EAAA,CAAAC,cAAA,cAAsC;IAAAD,EAAA,CAAAa,MAAA,GAAsB;IAAAb,EAAA,CAAAY,YAAA,EAAO;;;;IAD5CZ,EAAA,CAAAc,SAAA,GAAuB;IAAvBd,EAAA,CAAAe,UAAA,YAAAP,OAAA,CAAAG,IAAA,CAAuB;IACxCX,EAAA,CAAAc,SAAA,GAA+B;IAA/Bd,EAAA,CAAAe,UAAA,YAAAf,EAAA,CAAAgB,eAAA,IAAAC,GAAA,EAAAT,OAAA,CAAAG,IAAA,EAA+B;IAACX,EAAA,CAAAc,SAAA,GAAsB;IAAtBd,EAAA,CAAAkB,iBAAA,CAAAV,OAAA,CAAAW,WAAA,CAAsB;;;ADGxE,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAME,KAAAC,QAAQ,GAAe,EAAE;IACzB,KAAAC,OAAO,GAAW,EAAE;;EAEpBC,OAAOA,CAACC,IAAS;IACfC,OAAO,CAACC,IAAI,CAACF,IAAI,CAACG,KAAK,CAACT,WAAW,CAAC;IACpC,IAAI,IAAI,CAACI,OAAO,CAACM,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9B,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAAC;QAAEX,WAAW,EAAE,IAAI,CAACI,OAAO;QAAEZ,IAAI,EAAE;MAAK,CAAE,CAAC;MAC9D,IAAI,CAACY,OAAO,GAAG,EAAE;;EAErB;EAAC,QAAAQ,CAAA,G;qBAVUX,iBAAiB;EAAA;EAAA,QAAAY,EAAA,G;UAAjBZ,iBAAiB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCZ9BvC,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAa,MAAA,YAAK;QAAAb,EAAA,CAAAY,YAAA,EAAK;QACdZ,EAAA,CAAAC,cAAA,iBAAgD;QAA3BD,EAAA,CAAAE,UAAA,sBAAAuC,oDAAA;UAAAzC,EAAA,CAAAM,aAAA,CAAAoC,GAAA;UAAA,MAAAC,GAAA,GAAA3C,EAAA,CAAA4C,WAAA;UAAA,OAAY5C,EAAA,CAAAU,WAAA,CAAA8B,GAAA,CAAAhB,OAAA,CAAAmB,GAAA,CAAa;QAAA,EAAC;QAC3C3C,EAAA,CAAAC,cAAA,eAAgF;QAAtBD,EAAA,CAAAE,UAAA,2BAAA2C,0DAAAzC,MAAA;UAAA,OAAAoC,GAAA,CAAAjB,OAAA,GAAAnB,MAAA;QAAA,EAAqB;QAA/EJ,EAAA,CAAAY,YAAA,EAAgF;QAChFZ,EAAA,CAAAC,cAAA,gBAAsB;QAAAD,EAAA,CAAAa,MAAA,UAAG;QAAAb,EAAA,CAAAY,YAAA,EAAS;QAEtCZ,EAAA,CAAAC,cAAA,SAAI;QACAD,EAAA,CAAA8C,UAAA,IAAAC,+BAAA,gBAGK;QACT/C,EAAA,CAAAY,YAAA,EAAK;;;QARyDZ,EAAA,CAAAc,SAAA,GAAqB;QAArBd,EAAA,CAAAe,UAAA,YAAAyB,GAAA,CAAAjB,OAAA,CAAqB;QAI1DvB,EAAA,CAAAc,SAAA,GAAW;QAAXd,EAAA,CAAAe,UAAA,YAAAyB,GAAA,CAAAlB,QAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}